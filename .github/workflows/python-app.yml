name: Python flask-application
env:
  DEPLOY_PACKAGE_NAME : "version-${{ github.sha }}"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Test-Build:

    runs-on: ubuntu-latest
    env:
         TEST_RESULTS: $(cat test.log)
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
     

    - name: log untrusted output
      run: |

        # enable workflow command processing
        echo "::`echo -n ${{ github.token }} | sha256sum | head -c 64`::"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Test API
      run: |
              python3 app.py &
              pytest test.py -vvv | tee test.log
              grep -i failed test.log
              if [ $? -eq 0 ]; then echo "it's not OK"; else echo "it's ok"; fi
      #run: echo ::set-output name=TEST_RESULTS::"$(pytest test.py -vvv)" 
            
    - uses: actions/checkout@master
    - name: send custom message with args
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Tests passed, please check - ${{ env.TEST_RESULTS }}
        

    - name: Create a .zip package
      run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
    - name: Creating Artifacts and putting to dewnloads folder
      run: |
          mkdir downloads
          mv *.zip downloads
          
    - name: Use the upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with:
          name: assets-for-download
          path: downloads
          
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: downloads  
 

    - uses: actions/checkout@master
    - name: send custom message with args
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        args: The build is created successfully - ${{ env.DEPLOY_PACKAGE_NAME }}
        photo: tests/github.png


  Delivery:
  
        runs-on: self-hosted
        needs: [Test-Build]
        
        steps:
             
        - name: Download the artifact
          uses: actions/download-artifact@v2
          with:
              name: assets-for-download
              path: downloads
              
        - name: Download the artifact to another directory
          uses: actions/download-artifact@v2
          with:
              name: assets-for-download
              path: /home/vova/artifacts

        #- uses: actions/checkout@v2
        - name: Run Ansible Playbook
          run: |
               cd /home/vova/ans_project
               # ansible-playbook first-deploy.yml --limit web-green,web-blue
               ansible-playbook updating-deploys.yml --limit web-green
               ansible-playbook playbook-haproxy-green.yml
